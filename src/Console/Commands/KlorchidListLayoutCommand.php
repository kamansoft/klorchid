<?php

namespace Kamansoft\Klorchid\Console\Commands;

class KlorchidListLayoutCommand extends \Illuminate\Console\GeneratorCommand
{
        /**
     * The console command name.
     *
     * @var string
     */
    protected $signature = 'klorchid:make:layout:list    
    {name : The model class to be stored, or the name of the form request class if the model option value is empty. }
    {--model= : The model class to be stored. When used the name argument value will be the form request class name.}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Create a new List Layout';

    /**
     * The type of class being generated.
     *
     * @var string
     */
    protected $type = 'KlorchidListLayout';

    public function handle()
    {

       // return parent::handle(); // TODO: Change the autogenerated stub
        $name = $this->qualifyClass($this->getNameInput());

        $path = $this->getPath($name);
        dd($name,$path,$this->qualifyModel(parent::getNameInput()));
    }

    protected function getNameInput()
    {
        return $this->getClassNameHandler();
    }

    private function getClassNameHandler()
    {
        if (empty($this->input->getOption('model'))) {
            //return parent::getNameInput();
            $exploded = explode('/', parent::getNameInput());
            return end($exploded).'ListLayout';

        }
        return parent::getNameInput();

    }

    /**
     * Get the stub file for the generator.
     *
     * @return string
     */
    protected function getStub(): string
    {
        //return app_path('Kaman/resources/stubs/keditscreen.stub');
        return __DIR__ . '/../../../resources/stubs/klorchid.layout.list.stub';
    }

    protected function replaceClass($stub, $name)
    {
        $stub =  parent::replaceClass($stub, $name); // TODO: Change the autogenerated stub


        $replace = [$this->getModelClassName(),$this->getClassNamespaceFromPath($this->argument('repository'))];
        return str_replace(['DummyRepositoryClassName','DummyRepositoryFullClassName'], $replace, $stub);


    }

    protected function getClassNamespaceFromPath($path){
        return str_replace('/','\\',$path);
    }

    protected function getModelClassName(){
        $model_name = $this->argument('');
        $exploded = explode('/',$model_name);
        return end($exploded);
    }
}